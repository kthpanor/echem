Traceback (most recent call last):
  File "/opt/miniconda3/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/miniconda3/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/miniconda3/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/miniconda3/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# standard Python modules and functions
import copy

import matplotlib.pyplot as plt
import numpy as np

# QC software suites and functionalities
import veloxchem as vlx
from veloxchem.lreigensolver import LinearResponseEigenSolver
from veloxchem.rsplinabscross import LinearAbsorptionCrossSection

# for vlx
silent_ostream = vlx.OutputStream(None)
from mpi4py import MPI

comm = MPI.COMM_WORLD

water_xyz = """
O       0.0000000000     0.0000000000     0.1178336003
H      -0.7595754146    -0.0000000000    -0.4713344012
H       0.7595754146     0.0000000000    -0.4713344012
"""

# Prepare molecule and basis objects
molecule = vlx.Molecule.read_str(water_xyz)
basis = vlx.MolecularBasis.read(molecule, "6-31G")

# SCF settings and calculation
scf_drv = vlx.ScfRestrictedDriver(comm, ostream=silent_ostream)
scf_settings = {"conv_thresh": 1.0e-6}
method_settings = {"xcfun": "b3lyp"}
scf_drv.update_settings(scf_settings, method_settings)
scf_drv.compute(molecule, basis)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Input [0;32mIn [1][0m, in [0;36m<cell line: 8>[0;34m()[0m
[1;32m      5[0m [38;5;28;01mimport[39;00m [38;5;21;01mnumpy[39;00m [38;5;28;01mas[39;00m [38;5;21;01mnp[39;00m
[1;32m      7[0m [38;5;66;03m# QC software suites and functionalities[39;00m
[0;32m----> 8[0m [38;5;28;01mimport[39;00m [38;5;21;01mveloxchem[39;00m [38;5;28;01mas[39;00m [38;5;21;01mvlx[39;00m
[1;32m      9[0m [38;5;28;01mfrom[39;00m [38;5;21;01mveloxchem[39;00m[38;5;21;01m.[39;00m[38;5;21;01mlreigensolver[39;00m [38;5;28;01mimport[39;00m LinearResponseEigenSolver
[1;32m     10[0m [38;5;28;01mfrom[39;00m [38;5;21;01mveloxchem[39;00m[38;5;21;01m.[39;00m[38;5;21;01mrsplinabscross[39;00m [38;5;28;01mimport[39;00m LinearAbsorptionCrossSection

[0;31mModuleNotFoundError[0m: No module named 'veloxchem'
ModuleNotFoundError: No module named 'veloxchem'

