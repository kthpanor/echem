Traceback (most recent call last):
  File "/opt/miniconda3/envs/vlxdev/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/miniconda3/envs/vlxdev/lib/python3.9/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/miniconda3/envs/vlxdev/lib/python3.9/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/miniconda3/envs/vlxdev/lib/python3.9/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/opt/miniconda3/envs/vlxdev/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/opt/miniconda3/envs/vlxdev/lib/python3.9/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/opt/miniconda3/envs/vlxdev/lib/python3.9/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/opt/miniconda3/envs/vlxdev/lib/python3.9/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
fig = plt.figure(1, figsize=(8,6))

plt.plot(r, mo_1s, r, mo_2s, r, mo_2p_1, r, mo_2p_2, r, mo_2p_3)

plt.axhline(y=0.0, color='0.5', linewidth = 0.7, dashes = [3,1,3,1])
plt.setp(plt.gca(), xlim = (0,2), ylim = (-1, 6))
plt.legend([r'$1s$', r'$2s$', r'$2p_1$', r'$2p_2$', r'$2p_3$'], loc = 'upper right', frameon = False)

plt.title(r'Valence orbitals of Neon')
plt.xlabel(r'Distance to nucleus (Bohr)')
plt.ylabel(r'Orbital value (a.u.)')

plt.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m<ipython-input-3-fe966268815e>[0m in [0;36m<module>[0;34m[0m
[1;32m      1[0m [0mfig[0m [0;34m=[0m [0mplt[0m[0;34m.[0m[0mfigure[0m[0;34m([0m[0;36m1[0m[0;34m,[0m [0mfigsize[0m[0;34m=[0m[0;34m([0m[0;36m8[0m[0;34m,[0m[0;36m6[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      2[0m [0;34m[0m[0m
[0;32m----> 3[0;31m [0mplt[0m[0;34m.[0m[0mplot[0m[0;34m([0m[0mr[0m[0;34m,[0m [0mmo_1s[0m[0;34m,[0m [0mr[0m[0;34m,[0m [0mmo_2s[0m[0;34m,[0m [0mr[0m[0;34m,[0m [0mmo_2p_1[0m[0;34m,[0m [0mr[0m[0;34m,[0m [0mmo_2p_2[0m[0;34m,[0m [0mr[0m[0;34m,[0m [0mmo_2p_3[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      4[0m [0;34m[0m[0m
[1;32m      5[0m [0mplt[0m[0;34m.[0m[0maxhline[0m[0;34m([0m[0my[0m[0;34m=[0m[0;36m0.0[0m[0;34m,[0m [0mcolor[0m[0;34m=[0m[0;34m'0.5'[0m[0;34m,[0m [0mlinewidth[0m [0;34m=[0m [0;36m0.7[0m[0;34m,[0m [0mdashes[0m [0;34m=[0m [0;34m[[0m[0;36m3[0m[0;34m,[0m[0;36m1[0m[0;34m,[0m[0;36m3[0m[0;34m,[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/miniconda3/envs/vlxdev/lib/python3.9/site-packages/matplotlib/pyplot.py[0m in [0;36mplot[0;34m(scalex, scaley, data, *args, **kwargs)[0m
[1;32m   2838[0m [0;34m@[0m[0m_copy_docstring_and_deprecators[0m[0;34m([0m[0mAxes[0m[0;34m.[0m[0mplot[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2839[0m [0;32mdef[0m [0mplot[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0mscalex[0m[0;34m=[0m[0;32mTrue[0m[0;34m,[0m [0mscaley[0m[0;34m=[0m[0;32mTrue[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 2840[0;31m     return gca().plot(
[0m[1;32m   2841[0m         [0;34m*[0m[0margs[0m[0;34m,[0m [0mscalex[0m[0;34m=[0m[0mscalex[0m[0;34m,[0m [0mscaley[0m[0;34m=[0m[0mscaley[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2842[0m         **({"data": data} if data is not None else {}), **kwargs)

[0;32m/opt/miniconda3/envs/vlxdev/lib/python3.9/site-packages/matplotlib/axes/_axes.py[0m in [0;36mplot[0;34m(self, scalex, scaley, data, *args, **kwargs)[0m
[1;32m   1741[0m         """
[1;32m   1742[0m         [0mkwargs[0m [0;34m=[0m [0mcbook[0m[0;34m.[0m[0mnormalize_kwargs[0m[0;34m([0m[0mkwargs[0m[0;34m,[0m [0mmlines[0m[0;34m.[0m[0mLine2D[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1743[0;31m         [0mlines[0m [0;34m=[0m [0;34m[[0m[0;34m*[0m[0mself[0m[0;34m.[0m[0m_get_lines[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mdata[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1744[0m         [0;32mfor[0m [0mline[0m [0;32min[0m [0mlines[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1745[0m             [0mself[0m[0;34m.[0m[0madd_line[0m[0;34m([0m[0mline[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/miniconda3/envs/vlxdev/lib/python3.9/site-packages/matplotlib/axes/_base.py[0m in [0;36m__call__[0;34m(self, data, *args, **kwargs)[0m
[1;32m    271[0m                 [0mthis[0m [0;34m+=[0m [0margs[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    272[0m                 [0margs[0m [0;34m=[0m [0margs[0m[0;34m[[0m[0;36m1[0m[0;34m:[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 273[0;31m             [0;32myield[0m [0;32mfrom[0m [0mself[0m[0;34m.[0m[0m_plot_args[0m[0;34m([0m[0mthis[0m[0;34m,[0m [0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    274[0m [0;34m[0m[0m
[1;32m    275[0m     [0;32mdef[0m [0mget_next_color[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/miniconda3/envs/vlxdev/lib/python3.9/site-packages/matplotlib/axes/_base.py[0m in [0;36m_plot_args[0;34m(self, tup, kwargs)[0m
[1;32m    397[0m [0;34m[0m[0m
[1;32m    398[0m         [0;32mif[0m [0mx[0m[0;34m.[0m[0mshape[0m[0;34m[[0m[0;36m0[0m[0;34m][0m [0;34m!=[0m [0my[0m[0;34m.[0m[0mshape[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 399[0;31m             raise ValueError(f"x and y must have same first dimension, but "
[0m[1;32m    400[0m                              f"have shapes {x.shape} and {y.shape}")
[1;32m    401[0m         [0;32mif[0m [0mx[0m[0;34m.[0m[0mndim[0m [0;34m>[0m [0;36m2[0m [0;32mor[0m [0my[0m[0;34m.[0m[0mndim[0m [0;34m>[0m [0;36m2[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mValueError[0m: x and y must have same first dimension, but have shapes (100,) and (1,)
ValueError: x and y must have same first dimension, but have shapes (100,) and (1,)

