Traceback (most recent call last):
  File "/home/thomas/Notebook/anaconda/envs/echem/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/thomas/Notebook/anaconda/envs/echem/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/thomas/Notebook/anaconda/envs/echem/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/thomas/Notebook/anaconda/envs/echem/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/home/thomas/Notebook/anaconda/envs/echem/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/home/thomas/Notebook/anaconda/envs/echem/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/home/thomas/Notebook/anaconda/envs/echem/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/thomas/Notebook/anaconda/envs/echem/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------


Workflow with example in openMM.

## AIMD example with XTB

See https://xtb-docs.readthedocs.io/en/latest/md.html for more details.

- Want to run from notebook
    - Run without creating all files

- Visualize trajectory

```python
import matplotlib.pyplot as plt
import numpy as np


def write_xyz(mol_str, fname):
    input_str = "$coord\n"
    for i in np.arange(len(mol_str.split("\n"))):
        if mol_str.split("\n")[i]:
            data = mol_str.split("\n")[i].split(" ")
            tmp_str = ""
            for i in np.arange(len(data)):
                if data[i]:
                    if data[i].isalpha():
                        save_el = data[i].lower()
                    else:
                        tmp_str += data[i] + "   "
            tmp_str += save_el
            input_str += tmp_str + "\n"
    input_str += "$end"
    f = open(fname, "w")
    f.write(input_str)
    f.close()
    return False
```

```python
md_str = """$md
   temp=300
   time= 25.0
   dump=100.0
   step=  2.5
$end
"""

mol_str = """
O       0.0000000000     0.0000000000     0.1178336003
H      -0.7595754146    -0.0000000000    -0.4713344012
H       0.7595754146     0.0000000000    -0.4713344012
"""


mol_name = "molecule"
md_name = "md.inp"
save_xyz(mol_str, mol_name)
f = open("md.inp", "w")
f.write(md_str)
f.close()
```

```python
# !xtb $mol_name --input $md_name --omd
```

```python
traj = open("xtb.trj", "r").read()
energies = []
xyzs = []

snapshots = traj.split("energy:")[1:]
n_atoms = traj.split("\n")[0]
for i in np.arange(len(snapshots)):
    energies.append(np.float((snapshots[i].split(" ")[1])))
    tmp_snapshot = snapshots[i].split(")\n")[1]
    xyzs.append(tmp_snapshot.split("\n{}\n".format(n_atoms))[0])

plt.figure()
plt.plot(energies)
plt.show()
```

------------------

[0;36m  Input [0;32mIn [1][0;36m[0m
[0;31m    Workflow with example in openMM.[0m
[0m             ^[0m
[0;31mSyntaxError[0m[0;31m:[0m invalid syntax

SyntaxError: invalid syntax (1899357614.py, line 1)

