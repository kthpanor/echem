Traceback (most recent call last):
  File "/home/thomas/Notebook/anaconda/envs/echem/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/thomas/Notebook/anaconda/envs/echem/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/thomas/Notebook/anaconda/envs/echem/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/thomas/Notebook/anaconda/envs/echem/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/home/thomas/Notebook/anaconda/envs/echem/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/home/thomas/Notebook/anaconda/envs/echem/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/home/thomas/Notebook/anaconda/envs/echem/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/thomas/Notebook/anaconda/envs/echem/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
adc_xes = adcc.adc2(scf_ion, n_states=4)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNotImplementedError[0m                       Traceback (most recent call last)
Cell [0;32mIn [5], line 1[0m
[0;32m----> 1[0m adc_xes [38;5;241m=[39m [43madcc[49m[38;5;241;43m.[39;49m[43madc2[49m[43m([49m[43mscf_ion[49m[43m,[49m[43m [49m[43mn_states[49m[38;5;241;43m=[39;49m[38;5;241;43m4[39;49m[43m)[49m

File [0;32m~/pkg/adcc/adcc/__init__.py:101[0m, in [0;36madc2[0;34m(*args, **kwargs)[0m
[1;32m     99[0m [38;5;129m@with_runadc_doc[39m
[1;32m    100[0m [38;5;28;01mdef[39;00m [38;5;21madc2[39m([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[0;32m--> 101[0m     [38;5;28;01mreturn[39;00m [43mrun_adc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m,[49m[43m [49m[43mmethod[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43madc2[39;49m[38;5;124;43m"[39;49m[43m)[49m

File [0;32m~/pkg/adcc/adcc/workflow.py:179[0m, in [0;36mrun_adc[0;34m(data_or_matrix, n_states, kind, conv_tol, eigensolver, guesses, n_guesses, n_guesses_doubles, output, core_orbitals, frozen_core, frozen_virtual, method, n_singlets, n_triplets, n_spin_flip, environment, **solverargs)[0m
[1;32m     45[0m [38;5;28;01mdef[39;00m [38;5;21mrun_adc[39m(data_or_matrix, n_states[38;5;241m=[39m[38;5;28;01mNone[39;00m, kind[38;5;241m=[39m[38;5;124m"[39m[38;5;124many[39m[38;5;124m"[39m, conv_tol[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[1;32m     46[0m             eigensolver[38;5;241m=[39m[38;5;28;01mNone[39;00m, guesses[38;5;241m=[39m[38;5;28;01mNone[39;00m, n_guesses[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[1;32m     47[0m             n_guesses_doubles[38;5;241m=[39m[38;5;28;01mNone[39;00m, output[38;5;241m=[39msys[38;5;241m.[39mstdout, core_orbitals[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[1;32m     48[0m             frozen_core[38;5;241m=[39m[38;5;28;01mNone[39;00m, frozen_virtual[38;5;241m=[39m[38;5;28;01mNone[39;00m, method[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[1;32m     49[0m             n_singlets[38;5;241m=[39m[38;5;28;01mNone[39;00m, n_triplets[38;5;241m=[39m[38;5;28;01mNone[39;00m, n_spin_flip[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[1;32m     50[0m             environment[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39msolverargs):
[1;32m     51[0m     [38;5;124;03m"""Run an ADC calculation.[39;00m
[1;32m     52[0m 
[1;32m     53[0m [38;5;124;03m    Main entry point to run an ADC calculation. The reference to build the ADC[39;00m
[0;32m   (...)[0m
[1;32m    177[0m [38;5;124;03m    ... state = adcc.cvs_adc3(mf, core_orbitals=1, n_singlets=3)[39;00m
[1;32m    178[0m [38;5;124;03m    """[39;00m
[0;32m--> 179[0m     matrix [38;5;241m=[39m [43mconstruct_adcmatrix[49m[43m([49m
[1;32m    180[0m [43m        [49m[43mdata_or_matrix[49m[43m,[49m[43m [49m[43mcore_orbitals[49m[38;5;241;43m=[39;49m[43mcore_orbitals[49m[43m,[49m[43m [49m[43mfrozen_core[49m[38;5;241;43m=[39;49m[43mfrozen_core[49m[43m,[49m
[1;32m    181[0m [43m        [49m[43mfrozen_virtual[49m[38;5;241;43m=[39;49m[43mfrozen_virtual[49m[43m,[49m[43m [49m[43mmethod[49m[38;5;241;43m=[39;49m[43mmethod[49m[43m)[49m
[1;32m    183[0m     n_states, kind [38;5;241m=[39m validate_state_parameters(
[1;32m    184[0m         matrix[38;5;241m.[39mreference_state, n_states[38;5;241m=[39mn_states, n_singlets[38;5;241m=[39mn_singlets,
[1;32m    185[0m         n_triplets[38;5;241m=[39mn_triplets, n_spin_flip[38;5;241m=[39mn_spin_flip, kind[38;5;241m=[39mkind)
[1;32m    187[0m     [38;5;66;03m# Determine spin change during excitation. If guesses is not None,[39;00m
[1;32m    188[0m     [38;5;66;03m# i.e. user-provided, we cannot guarantee for obtaining a particular[39;00m
[1;32m    189[0m     [38;5;66;03m# spin_change in case of a spin_flip calculation.[39;00m

File [0;32m~/pkg/adcc/adcc/workflow.py:245[0m, in [0;36mconstruct_adcmatrix[0;34m(data_or_matrix, core_orbitals, frozen_core, frozen_virtual, method)[0m
[1;32m    240[0m     [38;5;28;01mraise[39;00m InputError([38;5;124m"[39m[38;5;124mIf core-valence separation approximation is [39m[38;5;124m"[39m
[1;32m    241[0m                      [38;5;124m"[39m[38;5;124mapplied then the number of core orbitals needs [39m[38;5;124m"[39m
[1;32m    242[0m                      [38;5;124m"[39m[38;5;124mto be specified via the parameter [39m[38;5;124m"[39m
[1;32m    243[0m                      [38;5;124m"[39m[38;5;124mcore_orbitals.[39m[38;5;124m"[39m)
[1;32m    244[0m [38;5;28;01mtry[39;00m:
[0;32m--> 245[0m     refstate [38;5;241m=[39m [43madcc_ReferenceState[49m[43m([49m[43mdata_or_matrix[49m[43m,[49m
[1;32m    246[0m [43m                                   [49m[43mcore_orbitals[49m[38;5;241;43m=[39;49m[43mcore_orbitals[49m[43m,[49m
[1;32m    247[0m [43m                                   [49m[43mfrozen_core[49m[38;5;241;43m=[39;49m[43mfrozen_core[49m[43m,[49m
[1;32m    248[0m [43m                                   [49m[43mfrozen_virtual[49m[38;5;241;43m=[39;49m[43mfrozen_virtual[49m[43m)[49m
[1;32m    249[0m [38;5;28;01mexcept[39;00m [38;5;167;01mValueError[39;00m [38;5;28;01mas[39;00m e:
[1;32m    250[0m     [38;5;28;01mraise[39;00m InputError([38;5;28mstr[39m(e))  [38;5;66;03m# In case of an issue with the spaces[39;00m

File [0;32m~/pkg/adcc/adcc/ReferenceState.py:142[0m, in [0;36mReferenceState.__init__[0;34m(self, hfdata, core_orbitals, frozen_core, frozen_virtual, symmetry_check_on_import, import_all_below_n_orbs)[0m
[1;32m     41[0m [38;5;124;03m"""Construct a ReferenceState holding information about the employed[39;00m
[1;32m     42[0m [38;5;124;03mSCF reference.[39;00m
[1;32m     43[0m 
[0;32m   (...)[0m
[1;32m    139[0m [38;5;124;03mbeta orbital into the core space.[39;00m
[1;32m    140[0m [38;5;124;03m"""[39;00m
[1;32m    141[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(hfdata, libadcc[38;5;241m.[39mHartreeFockSolution_i):
[0;32m--> 142[0m     hfdata [38;5;241m=[39m [43mimport_scf_results[49m[43m([49m[43mhfdata[49m[43m)[49m
[1;32m    144[0m [38;5;28mself[39m[38;5;241m.[39m_mospaces [38;5;241m=[39m MoSpaces(hfdata, frozen_core[38;5;241m=[39mfrozen_core,
[1;32m    145[0m                           frozen_virtual[38;5;241m=[39mfrozen_virtual,
[1;32m    146[0m                           core_orbitals[38;5;241m=[39mcore_orbitals)
[1;32m    147[0m [38;5;28msuper[39m()[38;5;241m.[39m[38;5;21m__init__[39m(hfdata, [38;5;28mself[39m[38;5;241m.[39m_mospaces, symmetry_check_on_import)

File [0;32m~/pkg/adcc/adcc/backends/__init__.py:107[0m, in [0;36mimport_scf_results[0;34m(res)[0m
[1;32m    102[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;124mUnrecognised path or file extension: [39m[38;5;132;01m{}[39;00m[38;5;124m"[39m
[1;32m    103[0m                          [38;5;124m"[39m[38;5;124m"[39m[38;5;241m.[39mformat(res))
[1;32m    105[0m [38;5;66;03m# Note: Add more backends here[39;00m
[0;32m--> 107[0m [38;5;28;01mraise[39;00m [38;5;167;01mNotImplementedError[39;00m([38;5;124m"[39m[38;5;124mNo means to import an SCF result of [39m[38;5;124m"[39m
[1;32m    108[0m                           [38;5;124m"[39m[38;5;124mtype [39m[38;5;124m"[39m [38;5;241m+[39m [38;5;28mstr[39m([38;5;28mtype[39m(res)) [38;5;241m+[39m [38;5;124m"[39m[38;5;124m implemented.[39m[38;5;124m"[39m)

[0;31mNotImplementedError[0m: No means to import an SCF result of type <class 'veloxchem.scfunrestdriver.ScfUnrestrictedDriver'> implemented.
NotImplementedError: No means to import an SCF result of type <class 'veloxchem.scfunrestdriver.ScfUnrestrictedDriver'> implemented.

