Traceback (most recent call last):
  File "/home/emi/.local/lib/python3.6/site-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/home/emi/.local/lib/python3.6/site-packages/nbclient/client.py", line 1093, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/emi/.local/lib/python3.6/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/emi/.local/lib/python3.6/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.6/asyncio/base_events.py", line 484, in run_until_complete
    return future.result()
  File "/home/emi/.local/lib/python3.6/site-packages/nbclient/client.py", line 560, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/home/emi/.local/lib/python3.6/site-packages/nbclient/client.py", line 854, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/emi/.local/lib/python3.6/site-packages/nbclient/client.py", line 756, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
#HF and CI calculation of OH. and H.
mol_str="""
O 0.0000 0.0000  0.0000
H 0.0000 0.8957 -0.3167
"""
molecule = vlx.Molecule.read_str(mol_str, units='angstrom')
molecule.set_multiplicity(2)
basis = vlx.MolecularBasis.read(molecule,"STO-3G")
scfdrv = vlx.ScfUnrestrictedDriver()
scfdrv.compute(molecule, basis)
E_OH_hf=scfdrv.get_scf_energy()

space=mtp.OrbSpace(molecule,scfdrv.mol_orbs)
space.FCI()
CIdrv=mtp.CIDriver(molecule,basis,space)
CIdrv.compute(1)
E_OH_FCI=CIdrv.getEnergy(0)


mol_str="H 0.0000 0.0000 0.0000"
molecule = vlx.Molecule.read_str(mol_str, units='angstrom')
molecule.set_multiplicity(2)
basis = vlx.MolecularBasis.read(molecule,"STO-3G")
scfdrv = vlx.ScfUnrestrictedDriver()
scfdrv.compute(molecule, basis)
E_H_hf=scfdrv.get_scf_energy()

#HF and CI calculations of water with stretching of one O-H bond

mol_template = """
O 0.0000 0.0000  0.0000
H 0.0000 0.8957 -0.3167
H 0.0000 0.0000  OHdist
"""
scfdrv = vlx.ScfRestrictedDriver()
distlist=[0.7,0.8,0.9,0.95,1.1,1.3,1.5,1.7,2,2.5,3,4,5]
E_hf=[]
E_FCI=[]
NON=[]

scf_settings = {'checkpoint_file': 'H2O.scf.h5','restart': 'yes'} #We reuse the previously converged orbitals at each step
scfdrv.update_settings(scf_settings, {})

#Scan over O-H distances
for dist in distlist:
    mol_str=mol_template.replace("OHdist", str(dist))
    molecule = vlx.Molecule.read_str(mol_str, units='angstrom')
    basis = vlx.MolecularBasis.read(molecule,"STO-3G")
    scfdrv.compute(molecule, basis)
    E_hf.append(scfdrv.get_scf_energy()-E_H_hf-E_OH_hf)
    
    space=mtp.OrbSpace(molecule,scfdrv.mol_orbs)
    space.FCI()
    CIdrv=mtp.CIDriver(molecule,basis,space)
    CIdrv.compute(1)
    E_FCI.append(CIdrv.getEnergy(0)-E_H_hf-E_OH_FCI)
    NON.append(CIdrv.getNON(0)) #Get the natural occupation numbers
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
[0;32m<ipython-input-2-73d224685fc8>[0m in [0;36m<module>[0;34m[0m
[1;32m     13[0m [0mspace[0m[0;34m=[0m[0mmtp[0m[0;34m.[0m[0mOrbSpace[0m[0;34m([0m[0mmolecule[0m[0;34m,[0m[0mscfdrv[0m[0;34m.[0m[0mmol_orbs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     14[0m [0mspace[0m[0;34m.[0m[0mFCI[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 15[0;31m [0mCIdrv[0m[0;34m=[0m[0mmtp[0m[0;34m.[0m[0mCIDriver[0m[0;34m([0m[0mmolecule[0m[0;34m,[0m[0mbasis[0m[0;34m,[0m[0mspace[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     16[0m [0mCIdrv[0m[0;34m.[0m[0mcompute[0m[0;34m([0m[0;36m1[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     17[0m [0mE_OH_FCI[0m[0;34m=[0m[0mCIdrv[0m[0;34m.[0m[0mgetEnergy[0m[0;34m([0m[0;36m0[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;31mTypeError[0m: __init__() takes from 1 to 3 positional arguments but 4 were given
TypeError: __init__() takes from 1 to 3 positional arguments but 4 were given

