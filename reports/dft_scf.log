Traceback (most recent call last):
  File "/home/emi/.local/lib/python3.6/site-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/home/emi/.local/lib/python3.6/site-packages/nbclient/client.py", line 1093, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/emi/.local/lib/python3.6/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/emi/.local/lib/python3.6/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.6/asyncio/base_events.py", line 484, in run_until_complete
    return future.result()
  File "/home/emi/.local/lib/python3.6/site-packages/nbclient/client.py", line 560, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/home/emi/.local/lib/python3.6/site-packages/nbclient/client.py", line 854, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/emi/.local/lib/python3.6/site-packages/nbclient/client.py", line 756, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
max_iter = 50
conv_thresh = 1e-5

e_vecs = []
F_mats = []

# initial guess from core Hamiltonian
C = get_MO_coeff(h)

print("iter       SCF energy   LDA exchange   Exact exchange   Error norm")

for iter in range(max_iter):
    
    D = np.einsum('ik,jk->ij', C[:, :nocc], C[:, :nocc])
        
    J = np.einsum('ijkl,kl->ij', g, D)
    F = h + 2*J      # no exact exchange in the Fock matrix
    
    F_xc, E_xc = LDA_exchange(D)
    F += F_xc        # add LDA exchange
    
    F_mats.append(F)
    
    E = np.einsum('ij,ij->', 2*h + 2*J, D) + V_nuc
    E += E_xc

    # determine exact exchange for comparison
    K = np.einsum('ilkj,kl->ij', g, D)
    E_exact_exchange = np.einsum('ij,ij->', -K, D)

    # compute convergence metric
    F_MO = np.einsum('ki,kl,lj->ij', C, F, C)
    e_vecs.append(np.reshape(F_MO[:nocc, nocc:], -1))
    error = np.linalg.norm(e_vecs[-1])

    print(f'{iter:>2d} {E:18.8f} {E_xc:14.8f} {E_exact_exchange:16.8f} {error:12.2e}')

    if error < conv_thresh:
        print('SCF iterations converged!')
        break
        
    F = get_DIIS_fock(F_mats, e_vecs)
    
    C = get_MO_coeff(F)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
[0;32m<ipython-input-8-1d3425787234>[0m in [0;36m<module>[0;34m[0m
[1;32m     17[0m     [0mF[0m [0;34m=[0m [0mh[0m [0;34m+[0m [0;36m2[0m[0;34m*[0m[0mJ[0m      [0;31m# no exact exchange in the Fock matrix[0m[0;34m[0m[0;34m[0m[0m
[1;32m     18[0m [0;34m[0m[0m
[0;32m---> 19[0;31m     [0mF_xc[0m[0;34m,[0m [0mE_xc[0m [0;34m=[0m [0mLDA_exchange[0m[0;34m([0m[0mD[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     20[0m     [0mF[0m [0;34m+=[0m [0mF_xc[0m        [0;31m# add LDA exchange[0m[0;34m[0m[0;34m[0m[0m
[1;32m     21[0m [0;34m[0m[0m

[0;32m<ipython-input-7-294ce529dbb3>[0m in [0;36mLDA_exchange[0;34m(D)[0m
[1;32m      8[0m     [0mden_array_format[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0;34m[[0m[0mD[0m[0;34m,[0m [0mD[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      9[0m     [0mden_cpp_format[0m [0;34m=[0m [0mvlx[0m[0;34m.[0m[0mveloxchemlib[0m[0;34m.[0m[0mAODensityMatrix[0m[0;34m([0m[0mden_array_format[0m[0;34m,[0m [0mvlx[0m[0;34m.[0m[0mveloxchemlib[0m[0;34m.[0m[0mdenmat[0m[0;34m.[0m[0mrest[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 10[0;31m     [0mden_grid[0m [0;34m=[0m [0mden_drv[0m[0;34m.[0m[0mgenerate[0m[0;34m([0m[0mden_cpp_format[0m[0;34m,[0m [0mmolecule[0m[0;34m,[0m [0mbasis[0m[0;34m,[0m [0mmol_grid[0m[0;34m,[0m [0mxctype[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     11[0m     [0mden_alpha[0m [0;34m=[0m [0mden_grid[0m[0;34m.[0m[0mdensity_aa_to_numpy[0m[0;34m([0m[0;36m0[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     12[0m     [0mden_beta[0m  [0;34m=[0m [0mden_grid[0m[0;34m.[0m[0mdensity_bb_to_numpy[0m[0;34m([0m[0;36m0[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;31mTypeError[0m: generate(): incompatible function arguments. The following argument types are supported:
    1. (self: veloxchem.veloxchemlib.DensityGridDriver, aoDensityMatrix: veloxchem.veloxchemlib.AODensityMatrix, molecule: veloxchem.veloxchemlib.Molecule, basis: veloxchem.veloxchemlib.MolecularBasis, molecularGrid: veloxchem.veloxchemlib.MolecularGrid, xcFunctionalType: str) -> CDensityGrid

Invoked with: <veloxchem.veloxchemlib.DensityGridDriver object at 0x7fbc35a85880>, <veloxchem.veloxchemlib.AODensityMatrix object at 0x7fbc35a85730>, <veloxchem.veloxchemlib.Molecule object at 0x7fbc35d14c38>, 
[CMolecularBasis (Object):0x3215910]
_label: 6-31G
_maxAngularMomentum: 1
_atomicBasisSets: 
_atomicBasisSets[0]: 

[CAtomBasis (Object):0x31faf70]
_idElemental: 8
_maxAngularMomentum: 1
_basisFunctions: 
_basisFunctions[0]: 

[CBasisFunction (Object):0x2642d90]
_angularMomentum: 0
_exponents: 
_exponents[0]: 
5484.67
_exponents[1]: 
825.235
_exponents[2]: 
188.047
_exponents[3]: 
52.9645
_exponents[4]: 
16.8976
_exponents[5]: 
5.79964
_normFactors: 
_normFactors[0]: 
0.831724
_normFactors[1]: 
1.53082
_normFactors[2]: 
2.47715
_normFactors[3]: 
3.25628
_normFactors[4]: 
2.79289
_normFactors[5]: 
0.954938

_basisFunctions[1]: 

[CBasisFunction (Object):0x2642dc8]
_angularMomentum: 0
_exponents: 
_exponents[0]: 
15.5396
_exponents[1]: 
3.59993
_exponents[2]: 
1.01376
_normFactors: 
_normFactors[0]: 
-0.617934
_normFactors[1]: 
-0.275721
_normFactors[2]: 
0.814208

_basisFunctions[2]: 

[CBasisFunction (Object):0x2642e00]
_angularMomentum: 1
_exponents: 
_exponents[0]: 
15.5396
_exponents[1]: 
3.59993
_exponents[2]: 
1.01376
_normFactors: 
_normFactors[0]: 
3.11694
_normFactors[1]: 
2.40144
_normFactors[2]: 
1.05436

_basisFunctions[3]: 

[CBasisFunction (Object):0x2642e38]
_angularMomentum: 0
_exponents: 
_exponents[0]: 
0.270006
_normFactors: 
_normFactors[0]: 
0.266956

_basisFunctions[4]: 

[CBasisFunction (Object):0x2642e70]
_angularMomentum: 1
_exponents: 
_exponents[0]: 
0.270006
_normFactors: 
_normFactors[0]: 
0.277432


_atomicBasisSets[1]: 

[CAtomBasis (Object):0x31faf90]
_idElemental: 1
_maxAngularMomentum: 0
_basisFunctions: 
_basisFunctions[0]: 

[CBasisFunction (Object):0x2f23bf0]
_angularMomentum: 0
_exponents: 
_exponents[0]: 
18.7311
_exponents[1]: 
2.82539
_exponents[2]: 
0.640122
_normFactors: 
_normFactors[0]: 
0.214935
_normFactors[1]: 
0.364571
_normFactors[2]: 
0.415051

_basisFunctions[1]: 

[CBasisFunction (Object):0x2f23c28]
_angularMomentum: 0
_exponents: 
_exponents[0]: 
0.161278
_normFactors: 
_normFactors[0]: 
0.181381


, <veloxchem.veloxchemlib.MolecularGrid object at 0x7fbc35d14650>, <xcfun.lda: 0>
TypeError: generate(): incompatible function arguments. The following argument types are supported:
    1. (self: veloxchem.veloxchemlib.DensityGridDriver, aoDensityMatrix: veloxchem.veloxchemlib.AODensityMatrix, molecule: veloxchem.veloxchemlib.Molecule, basis: veloxchem.veloxchemlib.MolecularBasis, molecularGrid: veloxchem.veloxchemlib.MolecularGrid, xcFunctionalType: str) -> CDensityGrid

Invoked with: <veloxchem.veloxchemlib.DensityGridDriver object at 0x7fbc35a85880>, <veloxchem.veloxchemlib.AODensityMatrix object at 0x7fbc35a85730>, <veloxchem.veloxchemlib.Molecule object at 0x7fbc35d14c38>, 
[CMolecularBasis (Object):0x3215910]
_label: 6-31G
_maxAngularMomentum: 1
_atomicBasisSets: 
_atomicBasisSets[0]: 

[CAtomBasis (Object):0x31faf70]
_idElemental: 8
_maxAngularMomentum: 1
_basisFunctions: 
_basisFunctions[0]: 

[CBasisFunction (Object):0x2642d90]
_angularMomentum: 0
_exponents: 
_exponents[0]: 
5484.67
_exponents[1]: 
825.235
_exponents[2]: 
188.047
_exponents[3]: 
52.9645
_exponents[4]: 
16.8976
_exponents[5]: 
5.79964
_normFactors: 
_normFactors[0]: 
0.831724
_normFactors[1]: 
1.53082
_normFactors[2]: 
2.47715
_normFactors[3]: 
3.25628
_normFactors[4]: 
2.79289
_normFactors[5]: 
0.954938

_basisFunctions[1]: 

[CBasisFunction (Object):0x2642dc8]
_angularMomentum: 0
_exponents: 
_exponents[0]: 
15.5396
_exponents[1]: 
3.59993
_exponents[2]: 
1.01376
_normFactors: 
_normFactors[0]: 
-0.617934
_normFactors[1]: 
-0.275721
_normFactors[2]: 
0.814208

_basisFunctions[2]: 

[CBasisFunction (Object):0x2642e00]
_angularMomentum: 1
_exponents: 
_exponents[0]: 
15.5396
_exponents[1]: 
3.59993
_exponents[2]: 
1.01376
_normFactors: 
_normFactors[0]: 
3.11694
_normFactors[1]: 
2.40144
_normFactors[2]: 
1.05436

_basisFunctions[3]: 

[CBasisFunction (Object):0x2642e38]
_angularMomentum: 0
_exponents: 
_exponents[0]: 
0.270006
_normFactors: 
_normFactors[0]: 
0.266956

_basisFunctions[4]: 

[CBasisFunction (Object):0x2642e70]
_angularMomentum: 1
_exponents: 
_exponents[0]: 
0.270006
_normFactors: 
_normFactors[0]: 
0.277432


_atomicBasisSets[1]: 

[CAtomBasis (Object):0x31faf90]
_idElemental: 1
_maxAngularMomentum: 0
_basisFunctions: 
_basisFunctions[0]: 

[CBasisFunction (Object):0x2f23bf0]
_angularMomentum: 0
_exponents: 
_exponents[0]: 
18.7311
_exponents[1]: 
2.82539
_exponents[2]: 
0.640122
_normFactors: 
_normFactors[0]: 
0.214935
_normFactors[1]: 
0.364571
_normFactors[2]: 
0.415051

_basisFunctions[1]: 

[CBasisFunction (Object):0x2f23c28]
_angularMomentum: 0
_exponents: 
_exponents[0]: 
0.161278
_normFactors: 
_normFactors[0]: 
0.181381


, <veloxchem.veloxchemlib.MolecularGrid object at 0x7fbc35d14650>, <xcfun.lda: 0>

