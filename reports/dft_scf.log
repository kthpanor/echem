Traceback (most recent call last):
  File "/opt/miniconda3/envs/echem/lib/python3.7/site-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/opt/miniconda3/envs/echem/lib/python3.7/site-packages/nbclient/client.py", line 1117, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/miniconda3/envs/echem/lib/python3.7/site-packages/nbclient/util.py", line 78, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/miniconda3/envs/echem/lib/python3.7/site-packages/nbclient/util.py", line 57, in just_run
    return loop.run_until_complete(coro)
  File "/opt/miniconda3/envs/echem/lib/python3.7/asyncio/base_events.py", line 587, in run_until_complete
    return future.result()
  File "/opt/miniconda3/envs/echem/lib/python3.7/site-packages/nbclient/client.py", line 559, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/opt/miniconda3/envs/echem/lib/python3.7/site-packages/nbclient/client.py", line 862, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/opt/miniconda3/envs/echem/lib/python3.7/site-packages/nbclient/client.py", line 765, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
den_drv = vlx.veloxchemlib.DensityGridDriver()
xctype = vlx.veloxchemlib.xcfun.lda # generate densities but no gradients of densities

def LDA_exchange(D):
    
    F_xc = np.zeros((nbas,nbas))

    den_array_format = np.array([D, D])
    den_cpp_format = vlx.veloxchemlib.AODensityMatrix(den_array_format, vlx.veloxchemlib.denmat.rest)
    den_grid = den_drv.generate(den_cpp_format, molecule, basis, mol_grid, xctype)
    den_alpha = den_grid.density_aa_to_numpy(0)
    den_beta  = den_grid.density_bb_to_numpy(0)
    
    n = den_alpha + den_beta # density on the molecular grid
    
    e_xc = - 0.75 * (3 / np.pi)**(1/3) * n**(1/3)
    E_xc = np.dot(weights, n * e_xc)
    
    v_xc = - (3 / np.pi)**(1/3) * n**(1/3)
        
    D = np.zeros((nbas,nbas)) # auxiliary density matrix for orbital pairs
    
    for alpha in range(nbas):
        for beta in range(alpha, nbas):

            D[alpha, beta] = 1.0

            den_array_format = np.array([D, D])
            den_cpp_format = vlx.veloxchemlib.AODensityMatrix(den_array_format, vlx.veloxchemlib.denmat.rest)
            den_grid = den_drv.generate(den_cpp_format, molecule, basis, mol_grid, xctype)
            den_ao_pair = den_grid.density_aa_to_numpy(0)

            F_xc[alpha,beta] = np.dot(weights, v_xc * den_ao_pair)
            F_xc[beta,alpha] = F_xc[alpha,beta]
        
            D[alpha, beta] = 0.0

    return F_xc, E_xc
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
[0;32m/var/folders/ky/5h8mb6gs32nbvf3w8cyqwrhm0000gn/T/ipykernel_1652/958914433.py[0m in [0;36m<module>[0;34m[0m
[0;32m----> 1[0;31m [0mden_drv[0m [0;34m=[0m [0mvlx[0m[0;34m.[0m[0mveloxchemlib[0m[0;34m.[0m[0mDensityGridDriver[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      2[0m [0mxctype[0m [0;34m=[0m [0mvlx[0m[0;34m.[0m[0mveloxchemlib[0m[0;34m.[0m[0mxcfun[0m[0;34m.[0m[0mlda[0m [0;31m# generate densities but no gradients of densities[0m[0;34m[0m[0;34m[0m[0m
[1;32m      3[0m [0;34m[0m[0m
[1;32m      4[0m [0;32mdef[0m [0mLDA_exchange[0m[0;34m([0m[0mD[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m      5[0m [0;34m[0m[0m

[0;31mTypeError[0m: __init__(): incompatible constructor arguments. The following argument types are supported:
    1. veloxchem.veloxchemlib.DensityGridDriver(comm: object)

Invoked with: 
TypeError: __init__(): incompatible constructor arguments. The following argument types are supported:
    1. veloxchem.veloxchemlib.DensityGridDriver(comm: object)

Invoked with: 

