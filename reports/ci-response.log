Traceback (most recent call last):
  File "/opt/anaconda3/envs/echem/lib/python3.7/site-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/opt/anaconda3/envs/echem/lib/python3.7/site-packages/nbclient/client.py", line 1085, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/anaconda3/envs/echem/lib/python3.7/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/anaconda3/envs/echem/lib/python3.7/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/anaconda3/envs/echem/lib/python3.7/asyncio/base_events.py", line 587, in run_until_complete
    return future.result()
  File "/opt/anaconda3/envs/echem/lib/python3.7/site-packages/nbclient/client.py", line 552, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/opt/anaconda3/envs/echem/lib/python3.7/site-packages/nbclient/client.py", line 846, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/opt/anaconda3/envs/echem/lib/python3.7/site-packages/nbclient/client.py", line 748, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import matplotlib.pyplot as plt

plt.figure(figsize=(6,4))
plt.title('Convergence of excitation energies')
x = np.array(range(1,5))
plt.plot(x,Energies[:,0], label='0->1')
plt.plot(x,Energies[:,1], label='0->2')
plt.plot(x,Energies[:,2], label='0->3')
plt.plot(x,Energies[:,3], label='0->4')
plt.legend()
plt.tight_layout(); plt.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m/var/folders/yn/sjrk11nj0zs5nb8wzbytm0j00000gn/T/ipykernel_26920/2943343344.py[0m in [0;36m<module>[0;34m[0m
[1;32m      4[0m [0mplt[0m[0;34m.[0m[0mtitle[0m[0;34m([0m[0;34m'Convergence of excitation energies'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      5[0m [0mx[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0marray[0m[0;34m([0m[0mrange[0m[0;34m([0m[0;36m1[0m[0;34m,[0m[0;36m5[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 6[0;31m [0mplt[0m[0;34m.[0m[0mplot[0m[0;34m([0m[0mx[0m[0;34m,[0m[0mEnergies[0m[0;34m[[0m[0;34m:[0m[0;34m,[0m[0;36m0[0m[0;34m][0m[0;34m,[0m [0mlabel[0m[0;34m=[0m[0;34m'0->1'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      7[0m [0mplt[0m[0;34m.[0m[0mplot[0m[0;34m([0m[0mx[0m[0;34m,[0m[0mEnergies[0m[0;34m[[0m[0;34m:[0m[0;34m,[0m[0;36m1[0m[0;34m][0m[0;34m,[0m [0mlabel[0m[0;34m=[0m[0;34m'0->2'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      8[0m [0mplt[0m[0;34m.[0m[0mplot[0m[0;34m([0m[0mx[0m[0;34m,[0m[0mEnergies[0m[0;34m[[0m[0;34m:[0m[0;34m,[0m[0;36m2[0m[0;34m][0m[0;34m,[0m [0mlabel[0m[0;34m=[0m[0;34m'0->3'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/echem/lib/python3.7/site-packages/matplotlib/pyplot.py[0m in [0;36mplot[0;34m(scalex, scaley, data, *args, **kwargs)[0m
[1;32m   3019[0m     return gca().plot(
[1;32m   3020[0m         [0;34m*[0m[0margs[0m[0;34m,[0m [0mscalex[0m[0;34m=[0m[0mscalex[0m[0;34m,[0m [0mscaley[0m[0;34m=[0m[0mscaley[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 3021[0;31m         **({"data": data} if data is not None else {}), **kwargs)
[0m[1;32m   3022[0m [0;34m[0m[0m
[1;32m   3023[0m [0;34m[0m[0m

[0;32m/opt/anaconda3/envs/echem/lib/python3.7/site-packages/matplotlib/axes/_axes.py[0m in [0;36mplot[0;34m(self, scalex, scaley, data, *args, **kwargs)[0m
[1;32m   1603[0m         """
[1;32m   1604[0m         [0mkwargs[0m [0;34m=[0m [0mcbook[0m[0;34m.[0m[0mnormalize_kwargs[0m[0;34m([0m[0mkwargs[0m[0;34m,[0m [0mmlines[0m[0;34m.[0m[0mLine2D[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1605[0;31m         [0mlines[0m [0;34m=[0m [0;34m[[0m[0;34m*[0m[0mself[0m[0;34m.[0m[0m_get_lines[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mdata[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1606[0m         [0;32mfor[0m [0mline[0m [0;32min[0m [0mlines[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1607[0m             [0mself[0m[0;34m.[0m[0madd_line[0m[0;34m([0m[0mline[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/echem/lib/python3.7/site-packages/matplotlib/axes/_base.py[0m in [0;36m__call__[0;34m(self, data, *args, **kwargs)[0m
[1;32m    313[0m                 [0mthis[0m [0;34m+=[0m [0margs[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    314[0m                 [0margs[0m [0;34m=[0m [0margs[0m[0;34m[[0m[0;36m1[0m[0;34m:[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 315[0;31m             [0;32myield[0m [0;32mfrom[0m [0mself[0m[0;34m.[0m[0m_plot_args[0m[0;34m([0m[0mthis[0m[0;34m,[0m [0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    316[0m [0;34m[0m[0m
[1;32m    317[0m     [0;32mdef[0m [0mget_next_color[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/echem/lib/python3.7/site-packages/matplotlib/axes/_base.py[0m in [0;36m_plot_args[0;34m(self, tup, kwargs, return_kwargs)[0m
[1;32m    499[0m [0;34m[0m[0m
[1;32m    500[0m         [0;32mif[0m [0mx[0m[0;34m.[0m[0mshape[0m[0;34m[[0m[0;36m0[0m[0;34m][0m [0;34m!=[0m [0my[0m[0;34m.[0m[0mshape[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 501[0;31m             raise ValueError(f"x and y must have same first dimension, but "
[0m[1;32m    502[0m                              f"have shapes {x.shape} and {y.shape}")
[1;32m    503[0m         [0;32mif[0m [0mx[0m[0;34m.[0m[0mndim[0m [0;34m>[0m [0;36m2[0m [0;32mor[0m [0my[0m[0;34m.[0m[0mndim[0m [0;34m>[0m [0;36m2[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mValueError[0m: x and y must have same first dimension, but have shapes (4,) and (5,)
ValueError: x and y must have same first dimension, but have shapes (4,) and (5,)

