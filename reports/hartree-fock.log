Traceback (most recent call last):
  File "/opt/miniconda3/envs/vlxdev/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/miniconda3/envs/vlxdev/lib/python3.9/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/miniconda3/envs/vlxdev/lib/python3.9/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/miniconda3/envs/vlxdev/lib/python3.9/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/opt/miniconda3/envs/vlxdev/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/opt/miniconda3/envs/vlxdev/lib/python3.9/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/opt/miniconda3/envs/vlxdev/lib/python3.9/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/opt/miniconda3/envs/vlxdev/lib/python3.9/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
max_iter = 50
conv_thresh = 1e-4

# initial guess from core Hamiltonian
C = get_MO_coeff(h)

print("iter      SCF energy    Error norm")

for iter in range(max_iter):
    
    D = np.einsum('ik,jk->ij', C[:, :nocc], C[:, :nocc])
        
    J = np.einsum('ijkl,kl->ij', g, D)
    K = np.einsum('ilkj,kl->ij', g, D)
    F = h + 2*J - K
    F_mats.append(F)
    
    E = np.einsum('ij,ij->', h + F, D) + V_nuc

    # compute convergence metric
    F_MO = np.einsum('ki,kl,lj->ij', C, F, C)
    e_vecs.append(np.reshape(F_MO[:nocc, nocc:], -1))
    error = np.linalg.norm(e_vecs[-1])

    print(f'{iter:>2d}  {E:16.8f}  {error:10.2e}')

    if error < conv_thresh:
        print('SCF iterations converged!')
        break
    
    C = get_MO_coeff(F)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
[0;32m<ipython-input-6-22ed73010366>[0m in [0;36m<module>[0;34m[0m
[1;32m     14[0m     [0mK[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0meinsum[0m[0;34m([0m[0;34m'ilkj,kl->ij'[0m[0;34m,[0m [0mg[0m[0;34m,[0m [0mD[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     15[0m     [0mF[0m [0;34m=[0m [0mh[0m [0;34m+[0m [0;36m2[0m[0;34m*[0m[0mJ[0m [0;34m-[0m [0mK[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 16[0;31m     [0mF_mats[0m[0;34m.[0m[0mappend[0m[0;34m([0m[0mF[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     17[0m [0;34m[0m[0m
[1;32m     18[0m     [0mE[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0meinsum[0m[0;34m([0m[0;34m'ij,ij->'[0m[0;34m,[0m [0mh[0m [0;34m+[0m [0mF[0m[0;34m,[0m [0mD[0m[0;34m)[0m [0;34m+[0m [0mV_nuc[0m[0;34m[0m[0;34m[0m[0m

[0;31mNameError[0m: name 'F_mats' is not defined
NameError: name 'F_mats' is not defined

